.TH lariza 1 "2021-01-03" "lariza" "User Commands"
.\" --------------------------------------------------------------------
.SH NAME
lariza.usage \- extended usage hints
.\" --------------------------------------------------------------------
.SH DESCRIPTION
\fBlariza\fP is a simple web browser using GTK+ 3, LibNotify, GLib and WebKit2GTK+.
This manpage contains additional hints and pointers regarding its usage.
.\" --------------------------------------------------------------------
.SH "HOTKEYS"
.SS "Global hotkeys"
These hotkeys work when either the location bar or the web view is being
focused.
.TP
\fBctrl\fP + \fBq\fP
Close the current window. Quits the entire program if this was the last
window and if there are no more active downloads (download manager is
shown otherwise).
.TP
\fBctrl\fP + \fBw\fP
Go to your \(lqhomepage\(rq. See the environment variable
$\fBLARIZA_HOME_URI\fP.
.TP
\fBctrl\fP + \fBt\fP
Open a new tab.
.TP
\fBctrl\fP + \fBr\fP
Reload the current page.
.TP
\fBctrl\fP + \fBd\fP
Open the download manager.
.TP
\fBctrl\fP + \fBl\fP
Focus the location bar.
.TP
\fBctrl\fP + \fBf\fP
Focus the location bar and set its text to \fB:/\fP, 
thereby starting a search of the current page.
.TP
\fBctrl\fP + \fBn\fP
Search forward.
.TP
\fBctrl\fP + \fBShift\fP + \fBn\fP
Search backward.
.TP
\fBctrl\fP + \fBj\fP
Disable javascript for the current tab and reload the page.
.TP
\fBctrl\fP + \fBm\fP
Enable javascript for the current tab and reload the page.
.TP
\fBctrl\fP + \fBo\fP
Reload trusted certificates.
.TP
\fBctrl\fP + \fBLeft\fP / \fBctrl\fP + \fBRight\fP
Select tab to the left / right.
.TP
\fBF2\fP / \fBF3\fP
Go backward and forward in current browser history.
.TP
\fBctrl\fP + \fBShift\fP + \fBo\fP
Open current url with \fIlarizaexternalhandler\fP
.TP
\fBctrl\fP + \fBh\fP
Open \fIlarizahistory\fP
.TP
\fBctrl\fP + \fBb\fP
Open \fIlarizabookmarks\fP
.TP
\fBctrl\fP + \fB=\fP
Increase zoom by \fB0.1\fP
.TP
\fBctrl\fP + \fB-\fP
Decrease zoom by \fB0.1\fP
.TP
\fBctrl\fP + \fB0\fP
Reset zoom to \fBLARIZA_ZOOM\fP see
\fBlariza\fP(1).
.TP
\fBctrl\fP + \fB[1-9]\fP
Focus tab coresponding to the given number
.P
.SS "Main window \(em WebKit viewport focused"
.TP
\fBEscape\fP
Stop loading.
.TP
\fBMiddle mouse\fP
Open the link under the pointer in a new window.
.TP
\fBBackward\fP / \fBforward\fP (mouse keys 8 and 9)
Same as \fBF2\fP and \fBF3\fP.
.TP
\fBctrl\fP + \fBScroll up\fP
.TQ
\fBCtrl\fP + \fBScroll up\fP
Increase zoom level of the current page.
.TP
\fBctrl\fP + \fBScroll down\fP
.TQ
\fBCtrl\fP + \fBScroll down\fP
Decrase zoom level of the current page.
.TP
\fBctrl\fP + \fBScroll horizontally\fP
.TQ
\fBCtrl\fP + \fBScroll horizontally\fP
Reset zoom to $\fBLARIZA_ZOOM\fP.
.P
.SS "Main window \(em location bar focused"
.TP
\fBEscape\fP
Reset the content of the location bar to the current URI.
.TP
\fBReturn\fP
Commit, i.e. begin searching or open the URI.
.P
.SS "Download manager"
.TP
\fBctrl\fP + \fBd\fP
.TQ
\fBctrl\fP + \fBq\fP
Close the download manager. Active downloads are never aborted. However,
if there are no more active downloads and no more browsing windows, then
the entire program will quit.
.\" --------------------------------------------------------------------
.SH "DOWNLOAD MANAGER"
Open the download manager using the appropriate hotkey. A new window
listing your downloads will appear. Clicking on an item will remove it
from the list and \(em if needed \(em cancel the download.
.P
There's no file manager integration, nor does \fBlariza\fP delete,
overwrite or resume downloads. If a file already exists, it won't be
touched. Instead, the new file name will have a suffix such as \fB.1\fP,
\fB.2\fP, \fB.3\fP, and so on.
.\" --------------------------------------------------------------------
.SH "USER-SUPPLIED JAVASCRIPT FILES"
After a page has been successfully loaded, the directory
\fI~/.config\:/lariza\:/user-scripts\fP will be scanned and each file in
it ending with \fB.js\fP will be run as a JavaScript file in the context
of said page.
.P
During development, you will most likely want to run \fBlariza\fP with
$\fBLARIZA_ENABLE_CONSOLE_TO_STDOUT\fP enabled.
.P
\fBlariza\fP comes with the following scripts:
.TP
\fBhints.js\fP
Press \fBf\fP (open link in current window) or \fBF\fP (open in new
window) to activate link hints. After typing the characters for one of
them, press \fBEnter\fP to confirm. Press \fBEscape\fP to abort.
.P
Those bundled scripts are automatically installed on \fBmake install\fP.
To use them, though, make sure to link them to the directory mentioned
above.
.\" --------------------------------------------------------------------
.SH "WEB EXTENSIONS"
On startup, WebKit checks \fI~/.config/lariza/web_extensions\fP for any
\fB.so\fP files. See
.UR http://\:blogs.igalia.com/\:carlosgc/\:2013/\:09/\:10/\:webkit2gtk-\:web-\:process-\:extensions/
this blog post
.UE
for further information on these extensions.
.P
\fBlariza\fP comes with the following extensions:
.TP
\fBwe_adblock.so\fP
Generic adblock. Reads patterns from the file
\fI~/.config/lariza/adblock\fP. Each line can contain a regular
expression. These expressions match case-insensitive and partially, i.e.
\fB.*foo.*\fP is the same as \fB.*FOO.*\fP and you can use anchors like
\fB^https?://...\fP. Please refer to
.UR https://\:developer.\:gnome.\:org/\:glib/\:stable/\:glib-\:regex-\:syntax.html
the GLib reference
.UE
for more details. Lines starting with \fB#\fP are ignored.
.P
Those bundled web extensions are automatically compiled when you run
\fBmake\fP and installed on \fBmake install\fP. To use them, though,
make sure to link them to the directory mentioned above.
.\" --------------------------------------------------------------------
.SH "TRUSTED CERTIFICATES"
By default, \fBlariza\fP trusts whatever CAs are trusted by WebKit. If
you wish to trust additional certificates, such as self-signed
certificates, the first thing you should do is try to add the
appropriate CAs to your system-wide store.
.P
If you wish to add simple exceptions, you can grab the certificate and
store it in the directory \fI~/.config/lariza/certs\fP. The filename
must be equal to the hostname:
.P
\f(CW
.nf
\&$ echo | openssl s_client -connect foo.de:443 | openssl x509 >foo.de
.fi
\fP
.P
This tells \fBlariza\fP to trust the given certificate when connecting
to host \fBfoo.de\fP.
.P
You can reload these certificates at runtime by pressing the appropriate
hotkey. Note that removed certificates will be kept in memory until you
restart \fBlariza\fP.
.P
Note: This is NOT equal to certificate pinning. WebKit ignores
user-specified certificates if the server's certificate can be validated
by any system-wide CA.
.\" --------------------------------------------------------------------
.SH EXTERNAL PROGRAMS
Lariza calls a number of external programs to facilitate extensibility.
These programs are all language independent.
.TP
\fBlarizahistory
is called without any arguments,
the program is intended to parse the \fILARIZA_HISTORY_FILE\fP
with some sort of menu selector.
.TP
\fBlarizabookmarks
is a program called in the same way as \fIlarizahistory\fP.
While it could be used for anything you like,
the intended use case is a bookmark manager
.TP
\fBlarizaexternalhandler
opens the \fBURI\fP currently displayed in the URI-bar.
The \fBURI\fP is passed as \fB$1\fP to the program.
.\" --------------------------------------------------------------------
.SH "SEE ALSO"
.BR lariza (1).
